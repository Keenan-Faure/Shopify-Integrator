version: "3"
services:

    app:
        image: mrkkyle/shopify-integrator-app:latest
        container_name: ${APP_CONTAINER_NAME}
        # environment:
        #     - VIRTUAL_HOST=app.si
        expose:
            - ${APP_PORT}
        ports:
            - "${APP_PORT}:${APP_PORT}"
        volumes:
            - ./app/src:/keenan/app/src
        networks:
            - integrator-net

    server:
        build:
            context: ./
            dockerfile: ./setup/server/${DOCKER_FILE}
        container_name: ${SERVER_CONTAINER_NAME}
        # environment:
        #     - VIRTUAL_HOST=api.si
        expose:
            - ${PORT}
        env_file:
            - .env
        depends_on:
            - postgres
        ports:
            - "${PORT}:${PORT}"
        volumes:
            - ./:/keenan/
        networks:
            - integrator-net

    docs:
        image: keenansame/shopify-integrator-docs:latest
        ports:
            - "${DOCS_PORT}:${DOCS_PORT}"
        container_name: ${DOCS_CONTAINER_NAME}
        # environment:
        #     - VIRTUAL_HOST=docs.si
        expose:
            - ${DOCS_PORT}
        volumes:
            - .env:/keenan/.env
            - ../Shopify-Integrator-docs/swagger.yml:/keenan/docs/swagger.yml
        networks:
            - integrator-net

    ngrok:
        image: ngrok/ngrok:latest
        container_name: ${NGROK_CONTAINER_NAME}
        command:
            - "start"
            - "--all"
            - "--config"
            - "/etc/ngrok.yml"
        depends_on:
            - server
        ports:
            - 8888:4040
        volumes:
            - ./ngrok/ngrok.yml:/etc/ngrok.yml
        networks:
            - integrator-net

    postgres:
        image: postgres
        container_name: ${DB_NAME}
        command: -c 'max_connections=200'
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PSW}
            - POSTGRES_DB=${DB_NAME}
        ports:
            - "5432:5432"
        volumes:
            - integrator-volume:/var/lib/postgresql/data
        networks:
            - integrator-net

    nginx-proxy:
        image: nginxproxy/nginx-proxy
        container_name: ${NGINX_PROXY_NAME}
        ports:
            - "80:80"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
        networks:
            - integrator-net

volumes:
    integrator-volume:
        driver: local

networks:
    integrator-net:
        driver: bridge