version: "2"
services:
    server:
        profiles: ["init"]
        build:
            context: ./
            dockerfile: ./setup/server/Dockerfile
        depends_on:
            - postgres
        ports:
            - "${PORT}:${PORT}"
        container_name: ${SERVER_CONTAINER_NAME}
        env_file:
            - .env
        networks:
            - integrator-net
        volumes:
            - .env:/keenan/.env

    docs:
        build:
            context: ../Shopify-Integrator-docs
            dockerfile: ../Shopify-Integrator-docs/setup/Dockerfile
        ports:
            - "${DOCS_PORT}:${DOCS_PORT}"
        container_name: ${DOCS_CONTAINER_NAME}
        env_file:
            - ../Shopify-Integrator/.env
        networks:
            - integrator-net
        volumes:
            - .env:/keenan/.env

    ngrok:
        image: ngrok/ngrok:latest
        restart: unless-stopped
        container_name: ${NGROK_CONTAINER_NAME}
        command:
            - "start"
            - "--all"
            - "--config"
            - "/etc/ngrok.yml"
        volumes:
            - ./ngrok/ngrok.yml:/etc/ngrok.yml
        ports:
          - 4040:4040
        depends_on:
            - server

    app:
        build:
            context: ./
            dockerfile: setup/app/Dockerfile
        ports:
            - "${APP_PORT}:${APP_PORT}"
        container_name: ${APP_CONTAINER_NAME}
        networks:
            - integrator-net
        volumes:
            - ./app/src:/keenan/app/src

    postgres:
        profiles: ["init"]
        restart: always
        container_name: ${DB_NAME}
        image: postgres
        ports:
            - "5432:5432"
        volumes:
            - integrator-volume:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PSW}
            - POSTGRES_DB=${DB_NAME}
        networks:
            - integrator-net

volumes:
    integrator-volume:
        driver: local

networks:
    integrator-net:
        driver: bridge
